<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3c.org/1999/xhtml"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                template="/WEB-INF/templates/template.xhtml">
    <ui:define name="head">
        <!-- ....................FONT AWESOME FOR AWESOME ICONS : ) ........... .............. -->
        <link rel="stylesheet" href="/webjars/font-awesome/6.4.0/css/all.min.css"/>
    </ui:define>

    <ui:define name="content">
        <h:form id="mainForm" onkeypress="if (event.key === 'Enter') {return false;}">
            <p:messages id="message" showDetail="true" showSummary="false" autoUpdate="true" closable="true"/>
            <div class="grid">

                <p:row styleClass="card-row">

                    <div class="col-12 md:col-7">
                        <div class="card" style="height: 100%">
                            <div class="card-header">
                                <h5>Current room climate at your work place:</h5>
                            </div>
                            <div class="grid">
                                <div class="col-12 md:col-6 xl:col-3">
                                    <div class="card stat-box"
                                         style="outline-style: hidden; background-color: #{climateMeasurementController.temperatureColor}">
                                        <div class="stats">
                                        <span class="stat-title">
                                            <h5>
                                                Temperature
                                                <i class="fa fa-solid fa-temperature-low"
                                                   style="float: right; font-size: 2rem"/>
                                            </h5>

                                        </span>
                                            <div>#{climateMeasurementController.getTemperature()}</div>

                                        </div>
                                    </div>
                                </div>

                                <div class="col-12 md:col-6 xl:col-3">
                                    <div class="card stat-box"
                                         style="outline-style: hidden; background-color: #{climateMeasurementController.humidityColor}">
                                        <div class="stats">
                                        <span class="stat-title">
                                            <h5>
                                                Humidity
                                                <i class="fa fa-solid fa-droplet"
                                                   style="float: right; font-size: 2rem"/>
                                            </h5>
                                        </span>
                                            <div>#{climateMeasurementController.getHumidity()}</div>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-12 md:col-6 xl:col-3">
                                    <div class="card stat-box"
                                         style="outline-style: hidden; background-color: #{climateMeasurementController.airQualityColor}">
                                        <div class="stats">
                                        <span class="stat-title">
                                            <h5>
                                                Air Quality
                                                <i class="fa fa-solid fa-wind"
                                                   style="float: right; font-size: 2rem"/>
                                            </h5>
                                        </span>
                                            <div>#{climateMeasurementController.getAirQuality()}</div>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-12 md:col-6 xl:col-3">
                                    <div class="card stat-box"
                                         style="outline-style: hidden; background-color: #{climateMeasurementController.lightColor}">
                                        <div class="stats">
                                        <span class="stat-title">
                                            <h5>
                                                Light
                                                    <i class="fa fa-solid fa-lightbulb"
                                                       style="float: right; font-size: 2rem"/>
                                            </h5>
                                        </span>
                                            <div>#{climateMeasurementController.getLight()}</div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>

                    <div class="col-12 md:col-5">
                        <div class="card">
                            <div class="card-header">
                                <h5>Tipps:</h5>
                            </div>
                            <p:tabView>
                                <p:tab title="Temperature">
                                    <div>Too warm: #{climateMeasurementController.getTemperatureMessageUpper()}</div>
                                    <div>Too cold: #{climateMeasurementController.getTemperatureMessageLower()}</div>
                                </p:tab>
                                <p:tab title="Humidity">
                                    <div>Too moist: #{climateMeasurementController.getHumidityMessageUpper()}</div>
                                    <div>Too dry: #{climateMeasurementController.getHumidityMessageLower()}</div>
                                </p:tab>
                                <p:tab title="Air Quality">
                                    <div>Too polluted: #{climateMeasurementController.getAirQualityMessageUpper()}</div>
                                    <div>???: #{climateMeasurementController.getAirQualityMessageLower()}</div>
                                </p:tab>
                                <p:tab title="Light">
                                    <div>Too bright: #{climateMeasurementController.getLightMessageUpper()}</div>
                                    <div>Too dark: #{climateMeasurementController.getLightMessageLower()}</div>
                                </p:tab>
                            </p:tabView>
                        </div>
                    </div>

                </p:row>


                <div class="col-12 md:col-8">
                    <div class="card">
                        <div class="card-header">
                            <h5>Overview of past climate data:</h5>
                        </div>
                        <p:lineChart model="#{climateMeasurementChartController.lineModel}"
                                     style="width: 100%; height: 500px;" id="chart" widgetVar="chart"/>
                    </div>
                </div>

                <div class="col-12 md:col-4">
                    <div class="card">
                        <div class="card-header">
                            <h5>Settings for Chart</h5>
                        </div>
                        <p:outputLabel for="groupBy" value="datatype:"/>
                        <p:selectOneListbox id="groupBy" value="#{climateMeasurementChartController.dataType}">
                            <f:selectItem itemLabel="Air Temperature" itemValue="Air Temperature"/>
                            <f:selectItem itemLabel="Air Humidity" itemValue="Air Humidity"/>
                            <f:selectItem itemLabel="Air Quality" itemValue="Air Quality"/>
                            <f:selectItem itemLabel="Light Intensity" itemValue="Light Intensity"/>
                        </p:selectOneListbox>

                        <p:separator/>

                        <p:outputLabel for="range" value="Range: "/>
                        <p:datePicker id="range" selectionMode="range"
                                      value="#{climateMeasurementChartController.range}"
                                      readonlyInput="true" pattern="dd.MM.yy"/>

                        <p:separator/>

                        <p:outputLabel for="granularity" value="granularity in minutes: "/>
                        <p:inputNumber id="granularity" value="#{climateMeasurementChartController.granularity}"
                                       minValue="1" decimalPlaces="0" maxlength="150"/>


                        <p:separator/>


                        <p:commandButton value="Submit"
                                         actionListener="#{climateMeasurementChartController.createChart()}"
                                         update="message, chart" icon="pi pi-check"/>

                    </div>
                </div>


                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <h5>List</h5>
                        </div>
                        <h:outputText
                                value="To enable sorting by multiple columns, hold ctrl while you click on the sorting icon."
                                style="color: #126198; font-weight: bold"/>
                        <div>
                            <p:dataTable value="#{climateMeasurementController.allMeasurementsForList}"
                                         var="measurement" reflow="true"
                                         paginator="true" paginatorPosition="bottom" rows="20" sortMode="multiple">

                                <p:column headerText="Timestamp" sortBy="#{measurement.timeStamp}"
                                          filterBy="#{measurement.timeStamp}" filterMatchMode="contains">
                                    <h:outputText value="#{measurement.timeStamp}">
                                    <f:convertDateTime type="localDate" pattern="dd.MM.yyyy HH:mm" />
                                    </h:outputText>
                                </p:column>
                                <p:column headerText="Sensor Type" sortBy="#{measurement.sensor.sensorType}"
                                          filterBy="#{measurement.sensor.sensorType}" filterMatchMode="contains">
                                    <h:outputText value="#{measurement.sensor.sensorType}"/>
                                </p:column>
                                <p:column headerText="Measured Value" sortBy="#{measurement.measuredValue}"
                                          filterBy="#{measurement.measuredValue}" filterMatchMode="contains">
                                    <h:outputText value="#{measurement.measuredValue}"/>
                                </p:column>
                                <p:column headerText="Unit" sortBy="#{measurement.sensor.sensorUnit}"
                                          filterBy="#{measurement.sensor.sensorUnit}" filterMatchMode="contains">
                                    <h:outputText value="#{measurement.sensor.sensorUnit}"/>
                                </p:column>
                            </p:dataTable>

                        </div>
                    </div>
                </div>


            </div>
        </h:form>
    </ui:define>
</ui:composition>